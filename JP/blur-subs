#!/bin/bash
# blur-subs: blur video file in a user-specified region

set -e

BLUR_LEVEL=10

RED='\033[1;31m'
NC='\033[0m'

usage() {
    echo "Usage: $0 [VIDEO]"
}

if [[ -z $1 ]]; then
    echo "$0: Please provide an video file."
    usage
    exit
fi

# get screen dimensions
screen_width=`xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*([0-9]+)x[0-9]+.*$/\1/'`
screen_height=`xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*[0-9]+x([0-9]+).*$/\1/'`

# ffprobe get video dimensions
dimension=`ffprobe -v quiet -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0 "$1"`
width=` echo $dimension | sed -r 's/^([0-9]+)x[0-9]+$/\1/'`
height=`echo $dimension | sed -r 's/^[0-9]+x([0-9]+)$/\1/'`

# create output file name
filename=$(basename -- "$1")
name="${filename%.*}"
ext="${filename##*.}"
output="${name}_blur.${ext}"

echo -ne "${RED}File '$output' already exists. Overwrite? [y/N]: ${NC}"
read -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
    rm -rf "$output"
else
    exit 1
fi

# ffprobe get video duration
duration=`ffprobe -v error -select_streams v:0 -show_entries stream=duration -of default=noprint_wrappers=1:nokey=1 "$1"`
half=$(echo "$duration / 2" | bc)

pidfile="/tmp/blur-subs.pid"
mpv --quiet --fullscreen --start="$half" "$1" & echo $! >"$pidfile"

slop=`slop -f "%x %y %w %h"` || exit 1
read -r X Y W H <<< $slop

kill -9 `cat "$pidfile"` >/dev/null

# scale screen size to video size

# X / Width
if [[ $screen_width -gt $width ]]; then
    ratio=$((screen_width / width))
    scaled_x=$((X/ratio))
    scaled_width=$((W/ratio))
elif [[ $screen_width -lt $width ]]; then
    ratio=$((width / screen_width))
    scaled_x=$((X*ratio))
    scaled_width=$((W*ratio))
else
    scaled_x=$((X))
    scaled_width=$((W))
fi

# Y / Height
if [[ $screen_height -gt $height ]]; then
    ratio=$((screen_height / height))
    scaled_y=$((Y/ratio))
    scaled_height=$((H/ratio))
elif [[ $screen_height -lt $height ]]; then
    ratio=$((height / screen_height))
    scaled_y=$((Y*ratio))
    scaled_height=$((H*ratio))
else
    scaled_y=$((Y))
    scaled_height=$((H))
fi

ffmpeg -i "$1" \
    -v quiet \
    -filter_complex "[0:v]crop=${scaled_width}:${scaled_height}:${scaled_x}:${scaled_y},avgblur=$BLUR_LEVEL[fg];[0:v][fg]overlay=${scaled_x}:${scaled_y}[v]" \
    -map "[v]" \
    -map 0:a \
    -c:a copy \
    -c:s copy \
    -movflags faststart \
    "$output" \
    -loglevel error

stty sane
