#+title: GPG

* Verify Hashes
#+begin_src bash
sha256sum -c <FILE>.sha256
#+end_src

* GPG Keys
** Generate GPG key
#+begin_src bash
gpg --full-gen-key
#+end_src
** Encrypt with GPG key
#+begin_src bash
gpg -r <RECIPIENT> -e <FILE>
#+end_src
*** For yourself
#+begin_src bash
gpg -r <YOUR IDENTITY> -e <FILE>
#+end_src
*** Decrypt
#+begin_src bash
gpg -d <FILE>.gpg
#+end_src
* Single File Encryption
** Encrypt File
- -c [symmetric] --no-symkey-cache [don't cache password locally] --cipher-algo AES256
#+begin_src bash
gpg -c --cipher-algo AES256 [FILE]
#+end_src
*** Don't remember password
#+begin_src bash
gpg -c --no-use-agent [FILE]
#+end_src

**** Or save option to config file.

#+begin_src bash
cat >> .gnupg/gpg.conf
no-use-agent
#+end_src

**** gpg > v2.2

#+begin_src bash
cat > .gnupg/gpg-agent.conf
default-cache-ttl 1
max-cache-ttl 1
echo RELOADAGENT | gpg-connect-agent
#+end_src
** Encrypt Directory
*** gpgtar
#+begin_src bash
gpgtar --encrypt --symmetric --output [OUTPUT].gpg [DIRECTORY]
#+end_src
**** gpgtar decrypt
#+begin_src bash
gpgtar --decrypt [INPUT].gpg

# decrypt into output directory
mkdir [DIRECTORY]
gpgtar --decrypt --directory [DIRECTORY] [INPUT].gpg
#+end_src

*** Create tar file -> encrypt
**** tar [(_C_)reate] [g(_Z_)ip] [save (_F_)ile]
#+begin_src bash
tar czf [OUTPUT].tar.gz [DIRECTORY]
#+end_src

**** Encrypt tar
#+begin_src bash
gpg -c [DIRECTORY].tar.tz
#+end_src

** Decrypt File
#+begin_src bash
gpg [FILE].gpg
#+end_src
